import { supabase } from '../lib/supabaseClient'
import Head from "next/head";

export const getServerSideProps = async (request) => {
  let long_url
  let newCount
  const { short } = request.query
  try {
    // Get the current count for this short_uri from the database
    let { data, error } = await supabase
      .from('urls')
      .select('count, long_url')
      .eq('short_uri', short)

    if (error) throw error
    if (!data || data.length === 0) {
      throw new Error("No such URL found")
    } else {
      long_url = data[0].long_url
    }

    // Increment count for this short_uri in the database
    newCount = data[0].count + 1
    let { error: updateError } = await supabase
      .from('urls')
      .update({ count: newCount })
      .match({ short_uri: short })

    if (updateError) throw updateError
  } catch (updateError) {
    console.error(updateError)
  }

  if (long_url) {
    return {
      redirect: {
        destination: long_url,
        permanent: false,
      },
    };
  }

  return {
    props: {},
  };
}

const ShortUriPage = () => {
  return (
    <div>
      <Head>
        <title>URL Shortener</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1>Requested link not found</h1>
    </div>
  );
}


export default ShortUriPage